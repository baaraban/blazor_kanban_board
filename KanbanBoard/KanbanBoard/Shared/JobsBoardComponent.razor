@using KanbanBoard.Services
@inject MainService service

@using KanbanBoard.Data.Entities

<div class="jobs-board">
    <CascadingValue Value="this">
        @foreach (var col in Columns)
        {
            <JobsColumnComponent JobColumn="@col" />
        }
        <AddColumnComponent />
    </CascadingValue>
</div>

@code {
    [Parameter] public List<JobItem> Jobs { get; set; }
    [Parameter] public List<JobColumn> Columns { get; set; }

    [Parameter] public EventCallback<JobItem> OnStatusUpdated { get; set; }

    public JobItem Payload { get; set; }

    public async Task UpdateJobAsync(JobColumn newStatus)
    {
        var task = Columns.SelectMany(x => x.JobItems).SingleOrDefault(x => x.Id == Payload.Id);

        foreach(var col in Columns)
        {
            col.JobItems.Remove(task);
        }


        if (task != null)
        {
            task.JobColumnId = newStatus.Id;
            await service.UpdateJobItem(task);
            this.StateHasChanged();
        }
    }

    public void StateChanged()
    {
        this.StateHasChanged();
    }

    public async Task AddNewColumnJobAsync(string newColumn)
    {
        var column = new JobColumn
        {
            Name = newColumn,
            Place = this.Columns.Count
        };

        column = await service.AddColumn(column);

        base.StateHasChanged();
    }
}